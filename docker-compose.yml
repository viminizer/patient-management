services:
  patient-service-db:
    image: postgres:latest
    container_name: patient-service-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin_user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    ports:
      - "5050:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - internal

  auth-service-db:
    image: postgres:latest
    container_name: auth-service-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin_user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    ports:
      - "5051:5432"
    volumes:
      - auth_db:/var/lib/postgresql/data
    networks:
      - internal

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    image: api-gateway:latest
    restart: unless-stopped
    container_name: api-gateway
    environment:
      AUTH_SERVICE_URL: http://auth-service:4005
    depends_on:
      - patient-service
    ports:
      - "4004:4004"
    networks:
      - internal

  patient-service:
    build:
      context: ./patient-service
      dockerfile: Dockerfile
    image: patient-service:latest
    container_name: patient-service
    restart: unless-stopped
    depends_on:
      - patient-service-db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://patient-service-db:5432/db
      SPRING_DATASOURCE_USERNAME: admin_user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_SQL_INIT_MODE: always
      BILLING_SERVICE_ADDRESS: billing-service
      BILLING_SERVICE_GRPC_PORT: 9001
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - internal

  billing-service:
    build:
      context: ./billing-service
      dockerfile: Dockerfile
    image: billing-service:latest
    container_name: billing-service
    ports:
      - "4001:4001"
      - "9001:9001"
    networks:
      - internal

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    image: auth-service:latest
    container_name: auth-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://auth-service-db:5432/db
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_DATASOURCE_USERNAME: admin_user
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_SQL_INIT_MODE: always
      JWT_SECRET: 9c9f99d4a8afac8a1dd87761cb01346cbed14652639952fe725d4074d96ae2322f994f4829acdfa90ac7399d5a83aab8000bbf145e1d28ea4f0959d79c602e5ceaa11f95eb5152416532b8927b574b381264a67cea9111e291e22ebcfe847737490d4121da1b177091cf311ff35faea2c4610ee283a37332b470faf87211a0a418829d3a77d8a985ae993dbd74cdc7fd3054fa9dea179417e6e06852ba80259c05df2cefe69db3a6362009c96c63c1832b4af3099af32a4e13eb1b37dcc459a6f01b6819a2ab0d6a2ecd51a5812ac2600cb4583881219c26f23a3630a93019be85d3aea79c64b5d1ca24835f70b9c6daec8ee04f5c8321dcba73984de0e2c0c5

    networks:
      - internal
  analytics-service:
    build:
      context: ./analytics-service
      dockerfile: Dockerfile
    image: analytics-service:latest
    restart: unless-stopped
    container_name: analytics-service
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "4002:4002"
    networks:
      - internal

  kafka:
    image: bitnami/kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_NODE_ID: "0"
      KAFKA_CFG_PROCESS_ROLES: controller,broker
    networks:
      - internal

volumes:
  db_data:
  auth_db:

networks:
  internal:
    driver: bridge
